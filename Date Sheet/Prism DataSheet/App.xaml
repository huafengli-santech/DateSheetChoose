<prism:PrismApplication x:Class="Prism_DataSheet.App"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="clr-namespace:Prism_DataSheet"
                        xmlns:prism="http://prismlibrary.com/">
    <Application.Resources>
        <!-- 通用TextBlock样式 -->
        <Style x:Key="BaseTbxStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="../Fonts/#iconfont" />
        </Style>
        <!-- 使用于关闭、最小、最大化的按钮样式 -->
        <Style x:Key="FormButtonStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="../Fonts/#iconfont" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#4886ff" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#44000000" />
                    <Setter Property="Foreground" Value="#355e89" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- 适用于所有按钮的样式 -->
        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="../Fonts/#iconfont" />
            <Setter Property="Background" Value="#4886ff" />
            <Setter Property="Foreground" Value="white" />
            <Setter Property="BorderBrush" Value="#85aeff" />
            <Setter Property="BorderThickness" Value="0.5" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="10,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#85aeff" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- 通用CheckBox样式 -->
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#dfdee0" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder"
                                    Margin="0,1,4,1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark"
                                          Margin="1"
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                          Fill="{TemplateBinding Foreground}"
                                          Opacity="0"
                                          Stretch="None" />
                                    <Rectangle x:Name="indeterminateMark"
                                               Margin="2"
                                               Fill="{TemplateBinding Foreground}"
                                               Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="optionMark" Property="Fill" Value="#85aeff" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="checkBoxBorder" Property="Background" Value="#4886ff" />
                                <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="Transparent" />
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="optionMark" Property="Fill" Value="white" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 通用Combobox样式 -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="Width" Value="150" />

            <Setter Property="Background" Value="White" />
            <!-- ItemContainerStyle ：下拉菜单item的样式 -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <!-- ComBoxItem -->
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="MinHeight" Value="20" />
                        <Setter Property="MinWidth" Value="60" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Back"
                                            Background="Transparent"
                                            BorderBrush="#81D779"
                                            BorderThickness="0,0,0,0">
                                        <ContentPresenter Margin="5,0,0,0"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center">
                                        </ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray">
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray">
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <!-- 外形样式 -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border Width="{TemplateBinding Width}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#dfdee0"
                                BorderThickness="0.5"
                                CornerRadius="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="grid" Grid.Column="0">
                                    <ToggleButton Width="{Binding ElementName=grid, Path=ActualWidth}"
                                                  Height="{Binding ElementName=grid, Path=ActualHeight}"
                                                  Margin="5,0,0,0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Background="{TemplateBinding Background}"
                                                  BorderThickness="0"
                                                  ClickMode="Press"
                                                  Content="{TemplateBinding Text}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="White" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                                <TextBlock Margin="4,0,0,0"
                                                                           HorizontalAlignment="Left"
                                                                           VerticalAlignment="Center"
                                                                           Foreground="{TemplateBinding Foreground}"
                                                                           Text="{TemplateBinding Content}" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Background" Value="White" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>

                                <Grid Grid.Column="1">
                                    <ToggleButton ClickMode="Press"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="White" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                                <Grid>
                                                                    <TextBlock x:Name="arrow_tb"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center"
                                                                               FontFamily="../Fonts/iconfont.ttf #iconfont"
                                                                               Foreground="{TemplateBinding Foreground}"
                                                                               RenderTransformOrigin="0.5,0.5"
                                                                               Text="&#xe63d;">
                                                                        <TextBlock.RenderTransform>
                                                                            <TransformGroup>
                                                                                <ScaleTransform />
                                                                                <SkewTransform />
                                                                                <RotateTransform />
                                                                                <TranslateTransform />
                                                                            </TransformGroup>
                                                                        </TextBlock.RenderTransform>
                                                                    </TextBlock>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">

                                                                </Trigger>
                                                                <EventTrigger RoutedEvent="Checked">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180" />
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>

                                                                <EventTrigger RoutedEvent="Unchecked">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180" />
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                                <!-- 下拉显示悬浮窗 -->
                                <Popup x:Name="Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="Bottom"
                                       PopupAnimation="Slide">

                                    <Border x:Name="DropDown"
                                            MinWidth="{TemplateBinding Width}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            CornerRadius="1"
                                            SnapsToDevicePixels="True">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="2"
                                                              Opacity="0.5"
                                                              ShadowDepth="0"
                                                              Color="Black" />
                                        </Border.Effect>
                                        <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                      Margin="4,6,4,6"
                                                      CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      SnapsToDevicePixels="True"
                                                      VerticalScrollBarVisibility="Auto">
                                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                            <StackPanel Background="White"
                                                        IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <!--<Border.Effect>
                                <DropShadowEffect BlurRadius="5"
                                                  Opacity="0.3"
                                                  ShadowDepth="-1"
                                                  Color="#FF969696" />
                            </Border.Effect>-->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 带搜索功能的Combobox样式 -->
        <Style x:Key="SearchCbxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="Width" Value="250" />
            <Setter Property="IsTextSearchEnabled" Value="True" />
            <Setter Property="IsEditable" Value="True" />

            <Setter Property="Background" Value="White" />
            <!-- ItemContainerStyle ：下拉菜单item的样式 -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <!-- ComBoxItem -->
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="MinHeight" Value="20" />
                        <Setter Property="MinWidth" Value="60" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Back"
                                            Background="Transparent"
                                            BorderBrush="#81D779"
                                            BorderThickness="0,0,0,0">
                                        <ContentPresenter Margin="5,0,0,0"
                                                          HorizontalAlignment="Left"
                                                          VerticalAlignment="Center">
                                        </ContentPresenter>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray">
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Back" Property="Background" Value="LightGray">
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <!-- 外形样式 -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border Width="{TemplateBinding Width}"
                                MinHeight="{TemplateBinding MinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#dfdee0"
                                BorderThickness="0.5"
                                CornerRadius="3">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        CornerRadius="3,0,0,3">
                                    <TextBox Grid.Column="0"
                                             VerticalAlignment="Center"
                                             BorderThickness="0"
                                             Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                                <Grid Grid.Column="1">
                                    <ToggleButton ClickMode="Press"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="White" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                                                                <Grid>
                                                                    <TextBlock x:Name="arrow_tb"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center"
                                                                               FontFamily="../Fonts/iconfont.ttf #iconfont"
                                                                               Foreground="{TemplateBinding Foreground}"
                                                                               RenderTransformOrigin="0.5,0.5"
                                                                               Text="&#xe63d;">
                                                                        <TextBlock.RenderTransform>
                                                                            <TransformGroup>
                                                                                <ScaleTransform />
                                                                                <SkewTransform />
                                                                                <RotateTransform />
                                                                                <TranslateTransform />
                                                                            </TransformGroup>
                                                                        </TextBlock.RenderTransform>
                                                                    </TextBlock>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">

                                                                </Trigger>
                                                                <EventTrigger RoutedEvent="Checked">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="180" />
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>

                                                                <EventTrigger RoutedEvent="Unchecked">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="arrow_tb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="180" />
                                                                                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>
                                <!-- 下拉显示悬浮窗 -->
                                <Popup x:Name="Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="Bottom"
                                       PopupAnimation="Slide">

                                    <Border x:Name="DropDown"
                                            MinWidth="{TemplateBinding Width}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            CornerRadius="1"
                                            SnapsToDevicePixels="True">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="2"
                                                              Opacity="0.5"
                                                              ShadowDepth="0"
                                                              Color="Black" />
                                        </Border.Effect>
                                        <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                      Margin="4,6,4,6"
                                                      CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      SnapsToDevicePixels="True"
                                                      VerticalScrollBarVisibility="Auto">
                                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                            <StackPanel Background="White"
                                                        IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer 滚动条 -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <!-- 滚动条颜色 -->
                            <Border Background="#646465" CornerRadius="3" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Opacity" Value="0.2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}"
                                   Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Opacity" Value="0.2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}"
                                   Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 滚动条上下按钮 -->
        <Style x:Key="VerticalScrollBarPageButton2" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Opacity" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Width="0"
                                   Height="0"
                                   Fill="#90000000" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="for_scrollbar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0,1,1,6" />
            <Setter Property="Width" Value="10" />
            <Setter Property="MinWidth" Value="5" />
            <Setter Property="Opacity" Value="0.2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto">
                                </RowDefinition>
                                <RowDefinition Height="*">
                                </RowDefinition>
                                <RowDefinition Height="auto">
                                </RowDefinition>
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Row="0"
                                          Command="{x:Static ScrollBar.PageUpCommand}"
                                          Style="{StaticResource VerticalScrollBarPageButton2}" />
                            <Track x:Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Grid.Row="2"
                                          Command="{x:Static ScrollBar.PageDownCommand}"
                                          Style="{StaticResource VerticalScrollBarPageButton2}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="1,0,6,1" />
                    <Setter Property="Height" Value="5" />
                    <Setter Property="MinHeight" Value="5" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Opacity" Value="0.2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="for_scrollviewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                        Cursor="{TemplateBinding Cursor}" />
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                           HorizontalAlignment="Right"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           Orientation="Vertical"
                                           Style="{StaticResource for_scrollbar}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                           Value="{TemplateBinding VerticalOffset}" />
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                           VerticalAlignment="Bottom"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           Orientation="Horizontal"
                                           Style="{StaticResource for_scrollbar}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                           Value="{TemplateBinding HorizontalOffset}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ScrollChanged">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0:0:1" />
                                        <DoubleAnimation BeginTime="0:0:1"
                                                         Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2"
                                                         Duration="0:0:1" />
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0:0:1" />
                                        <DoubleAnimation BeginTime="0:0:1"
                                                         Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0:0:0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_VerticalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2"
                                                         Duration="0:0:0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseEnter" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0:0:0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave" SourceName="PART_HorizontalScrollBar">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2"
                                                         Duration="0:0:0.7" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- 默认ScrollBar -->
        <Style BasedOn="{StaticResource for_scrollbar}" TargetType="ScrollBar" />
        <!-- 默认ScrollView -->
        <Style BasedOn="{StaticResource for_scrollviewer}" TargetType="ScrollViewer" />
        <!-- 默认tabControl -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="#FFACACAC" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot"
                              ClipToBounds="True"
                              KeyboardNavigation.TabNavigation="Local"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="HeaderPanel"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      Panel.ZIndex="1"
                                      Background="Transparent"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1" />
                            <Line Margin="0,0,0,1"
                                  VerticalAlignment="Bottom"
                                  SnapsToDevicePixels="True"
                                  Stroke="Gray"
                                  StrokeThickness="0.1"
                                  X1="0"
                                  X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
                            <Border x:Name="ContentPanel"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="0"
                                                  Content="{TemplateBinding SelectedContent}"
                                                  ContentSource="SelectedContent"
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#FFACACAC" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            <Border x:Name="_underline"
                                    Margin="{TemplateBinding Margin}"
                                    BorderBrush="#4886ff"
                                    BorderThickness="0" />
                            <Grid>
                                <TextBlock x:Name="txt"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Header}"
                                           TextTrimming="CharacterEllipsis"
                                           ToolTip="{TemplateBinding Header}"
                                           Visibility="Visible" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="txt" Property="Foreground" Value="#4886ff" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.56" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter TargetName="txt" Property="Foreground" Value="#4886ff" />
                                <Setter TargetName="_underline" Property="BorderThickness" Value="0,0,0,2" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</prism:PrismApplication>
